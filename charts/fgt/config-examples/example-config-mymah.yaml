image:
#   # -- The repository of the container image
#   repository: xxxx.dkr.ecr.eu-central-1.amazonaws.com/your-repo-name
#   # -- Image Pull Policy
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
   tag: "v0.11.2"

#
# hostAliases is only needed if you have DNS problems.
# Only works if charts/fgt/templates/deployment.yaml have a
#+      {{- with .Values.hostAliases }}
#+      hostAliases:
#+        {{- toYaml . | nindent 8 }}
#+      {{- end }}
#
hostAliases:
  - ip: "213.63.130.240"
    hostnames:
    - "fgt-dev.pharmaledger.pdmfc.com"

# # Example my-config.yaml for local testing setup with port forwarding
# config:
#   # -- The URL of the FGT API including port
   #fgtApi: "http://localhost:8091/traceability"

# Example my-config.yaml for AWS EKS deployment
config:
  # -- The role the FGT API Hub takes
  role: "mah"
  # -- If instance hosts its own traceability functionality
  isTraceability: false
  # -- The URL of the FGT API including port
  fgtApi: "http://api-mah-mymah/"
  # -- The Domain, e.g. "fgt"
  domain: "traceability"
  # -- The Subdomain, should be domain.company, e.g. fgt.my-company
  subDomain: "traceability.mah"
  # -- The Vault domain, should be vault.company, e.g. vault.my-company
  vaultDomain: "vault.mah"
  # -- The Full URL of the Ethadapter including protocol and port, e.g. "https://ethadapter.my-company.com:3000"
  ethadapterUrl: ""
  #
  # bdnsHosts is now irrelevant, as it will be fetch from remote
  #
  # ATTENTION: Original examples are missing "address". "passrepeat" should be optional.
  credentials: |-
    {
      "id": {
        "secret": "MYMAH011",
        "public": true
      },
      "name": {
        "secret": "Company Inc.",
        "public": true
      },
      "email": {
        "secret": "pharmaledgermymah@company.com",
        "public": true
      },
      "address": {
        "required": true,
        "secret": "address street",
        "public": true
      },
      "pass": {
        "secret": "This1sSuchAS3curePassw0rd"
      },
      "passrepeat": {
        "secret": "This1sSuchAS3curePassw0rd"
      }
    }

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

ingress:
  app:
    # -- Whether to create ingress or not.
    enabled: true
    # -- The className specifies the IngressClass object which is responsible for that class.
    #className: alb
    # -- Ingress annotations.
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      # The name of the ALB group, can be used to configure a single ALB by multiple ingress objects
      #alb.ingress.kubernetes.io/group.name: default
      # Specifies the HTTP path when performing health check on targets.
      alb.ingress.kubernetes.io/healthcheck-path: /
      # Specifies the port used when performing health check on targets.
      #alb.ingress.kubernetes.io/healthcheck-port: traffic-port
      # Specifies the HTTP status code that should be expected when doing health checks against the specified health check path.
      #alb.ingress.kubernetes.io/success-codes: "200"
      # Listen on HTTPS protocol at port 443 at the ALB
      #alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      # Use target type IP which is the case if the service type is ClusterIP
      #alb.ingress.kubernetes.io/target-type: ip   
    # -- A list of hostnames and path(s) to listen at the Ingress Controller
    hosts:
      -
        # -- The FQDN/hostname
        host: mah-mymah
        paths:
          -
            # -- The Ingress Path.
            path: /(.*)
            # -- The type of path. This value is required since Kubernetes 1.18.
            pathType: ImplementationSpecific

  api:
    # -- Whether to create ingress or not.
    enabled: true
    # -- The className specifies the IngressClass object which is responsible for that class.
    #className: alb
    # -- Ingress annotations.
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      # The name of the ALB group, can be used to configure a single ALB by multiple ingress objects
      #alb.ingress.kubernetes.io/group.name: default
      # Specifies the HTTP path when performing health check on targets.
      #alb.ingress.kubernetes.io/healthcheck-path: /
      # Specifies the port used when performing health check on targets.
      #alb.ingress.kubernetes.io/healthcheck-port: traffic-port
      # Specifies the HTTP status code that should be expected when doing health checks against the specified health check path.
      #alb.ingress.kubernetes.io/success-codes: "200"
      # Listen on HTTPS protocol at port 443 at the ALB
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      # Use target type IP which is the case if the service type is ClusterIP
      alb.ingress.kubernetes.io/target-type: ip   
    # -- A list of hostnames and path(s) to listen at the Ingress Controller
    hosts:
      -
        # -- The FQDN/hostname
        host: api-mah-mymah
        paths:
          -
            # -- The Ingress Path.
            path: /(.*)
            # -- The type of path. This value is required since Kubernetes 1.18.
            pathType: ImplementationSpecific

  swagger:
    # -- Whether to create ingress or not.
    enabled: true
    # -- The className specifies the IngressClass object which is responsible for that class.
    #className: alb
    # -- Ingress annotations.
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      # The name of the ALB group, can be used to configure a single ALB by multiple ingress objects
      #alb.ingress.kubernetes.io/group.name: default
      # Specifies the HTTP path when performing health check on targets.
      #alb.ingress.kubernetes.io/healthcheck-path: /
      # Specifies the port used when performing health check on targets.
      #alb.ingress.kubernetes.io/healthcheck-port: traffic-port
      # Specifies the HTTP status code that should be expected when doing health checks against the specified health check path.
      #alb.ingress.kubernetes.io/success-codes: "200"
      # Listen on HTTPS protocol at port 443 at the ALB
      #alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      # Use target type IP which is the case if the service type is ClusterIP
      #alb.ingress.kubernetes.io/target-type: ip   
    # -- A list of hostnames and path(s) to listen at the Ingress Controller
    hosts:
      -
        # -- The FQDN/hostname
        host: swagger-mah-mymah
        paths:
          -
            # -- The Ingress Path.
            path: /(.*)
            # -- The type of path. This value is required since Kubernetes 1.18.
            pathType: ImplementationSpecific
